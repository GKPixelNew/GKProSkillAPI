plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots')
    }

    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://oss.sonatype.org/content/groups/public/')
    }

    maven {
        url = uri('https://repo.md-5.net/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://mvn.lumine.io/repository/maven-public/')
    }

    maven {
        url = uri('https://jitpack.io')
    }

    maven {
        url = uri('https://maven.enginehub.org/repo/')
    }

    maven {
        url = uri('https://repo.extendedclip.com/content/repositories/placeholderapi/')
    }

    maven {
        url = uri('https://repo.md-5.net/content/groups/public/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}

dependencies {
    compileOnly 'org.apache.maven.plugins:maven-install-plugin:3.0.0-M1'
    compileOnly 'org.spigotmc:spigot-api:1.19-R0.1-SNAPSHOT'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    compileOnly 'LibsDisguises:LibsDisguises:10.0.29'
    compileOnly 'me.clip:placeholderapi:2.10.10'
    compileOnly 'net.md-5:bungeecord-api:1.19-R0.1-SNAPSHOT'
    compileOnly 'fr.neatmonster:nocheatplus:3.16.1-SNAPSHOT'
    compileOnly 'io.lumine:Mythic-Dist:5.0.3-SNAPSHOT'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.3'
    compileOnly 'com.sk89q.worldedit:worldedit-core:7.1.0'
    compileOnly 'com.github.promcteam:promccore:dev-SNAPSHOT'
    compileOnly 'com.github.promcteam:proskillapiparties:master-SNAPSHOT'
    compileOnly 'ru.endlesscode.mimic:mimic-bukkit-api:0.8.0'
}

group = 'mc.promcteam'
version = '1.1.7.18'
description = 'ProSkillAPI'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

processResources {
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand project.properties
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
